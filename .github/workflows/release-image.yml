name: Release Image

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Release version (e.g., 1.2.3)"
        required: true
        type: string
      authors:
        description: "Comma-separated list of the release authors' emails (e.g. a1@mongodb.com,a2@mongodb.com)"
        required: true
        type: string
      commit_sha:
        description: "Commit SHA to use for the image (e.g. 7c2a91 or latest)"
        required: false
        default: "latest"
        type: string

permissions:
  contents: write
  pull-requests: write
      
jobs:
  release-image:
    runs-on: ubuntu-latest
    environment: release
    env:
      DOCKER_RELEASE_REPO: docker.io/andrpac/mongodb-atlas-kubernetes-operator
      DOCKER_PRERELEASE_REPO: docker.io/andrpac/mongodb-atlas-kubernetes-operator-prerelease
      QUAY_RELEASE_REPO: quay.io/andrpac/mongodb-atlas-kubernetes-operator
      QUAY_PRERELEASE_REPO: quay.io/andrpac/mongodb-atlas-kubernetes-operator-prerelease

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate GitHub App Token
        id: generate_token
        uses: mongodb/apix-action/token@v8
        with:
          app-id: ${{ secrets.AKO_RELEASER_APP_ID }}
          private-key: ${{ secrets.AKO_RELEASER_RSA_KEY }}

      - name: Log in to Docker registry
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Log in to Quay registry
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}

      - name: Resolve commit SHA and promotion tag
        id: tags
        run: |
          if [ "${{ github.event.inputs.commit_sha }}" = "latest" ]; then
            git fetch origin main
            sha=$(git rev-parse origin/main)
          else
            sha="${{ github.event.inputs.commit_sha }}"
          fi
          echo "commit_sha=$sha" >> "$GITHUB_OUTPUT"
          echo "promoted_tag=promoted-$sha" >> "$GITHUB_OUTPUT"

      - name: Move image to Docker registry release from prerelease
        run: ./scripts/move-image.sh
        env:
          IMAGE_SRC_REPO: ${{ env.DOCKER_PRERELEASE_REPO }}
          IMAGE_DEST_REPO: ${{ env.DOCKER_RELEASE_REPO }}
          IMAGE_SRC_TAG: ${{ steps.tags.outputs.promoted_tag }}
          IMAGE_DEST_TAG: ${{ github.event.inputs.version }}

      - name: Move image to Quay registry release from prerelease
        run: ./scripts/move-image.sh
        env:
          IMAGE_SRC_REPO: ${{ env.QUAY_PRERELEASE_REPO }}
          IMAGE_DEST_REPO: ${{ env.QUAY_RELEASE_REPO }}
          IMAGE_SRC_TAG: ${{ steps.tags.outputs.promoted_tag }}
          IMAGE_DEST_TAG: ${{ github.event.inputs.version }}
      
      # Image should already be in the release-ako repoes
      - name: Create deploy configurations
        uses: ./.github/actions/gen-install-scripts
        with:
          IMAGE_URL: "${{ env.DOCKER_RELEASE_REPO }}:${{ github.event.inputs.version }}"
          VERSION: ${{ github.event.inputs.version }}
          ENV: prod

      - name: Create SDLC report
        run: ./scripts/gen-sdlc-checklist.sh
        env:
          VERSION: ${{ github.event.inputs.version }}
          AUTHORS: ${{ github.event.inputs.authors }}

      - name: Bump helm chart version
        run: ./scripts/bump-helm-chart-version.sh
        env: 
          VERSION: ${{ github.event.inputs.version }}
      
      - name: Commit and create pull request for release changes
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ steps.generate_token.outputs.token }}
          commit-message: "chore(release): updates from new release v${{ github.event.inputs.version }}"
          title: "Release v${{ github.event.inputs.version }}"
          body: |
            This PR was automatically generated by the **release-image** workflow.
            
            Version: `${{ github.event.inputs.version }}`
            Authors: ${{ github.event.inputs.authors }}
          branch: "release/${{ github.event.inputs.version }}"
          delete-branch: true

      - name: Login to artifactory
        uses: docker/login-action@v3
        with:
          registry: artifactory.corp.mongodb.com
          username: ${{ secrets.MDB_ARTIFACTORY_USERNAME }}
          password: ${{ secrets.MDB_ARTIFACTORY_PASSWORD }}

      - name: Sign Docker registry released images
        run: ./scripts/sign-all.sh
        env:
          PKCS11_URI: ${{ secrets.PKCS11_URI }}
          GRS_USERNAME: ${{ secrets.GRS_USERNAME }}
          GRS_PASSWORD: ${{ secrets.GRS_PASSWORD }}
          IMG_REPO: ${{ env.DOCKER_RELEASE_REPO }}
          VERSION: ${{ github.event.inputs.version }}

      - name: Sign Quay registry release image
        run: ./scripts/sign-all.sh
        env:
          PKCS11_URI: ${{ secrets.PKCS11_URI }}
          GRS_USERNAME: ${{ secrets.GRS_USERNAME }}
          GRS_PASSWORD: ${{ secrets.GRS_PASSWORD }}
          IMG_REPO: ${{ env.QUAY_RELEASE_REPO }}
          VERSION: ${{ github.event.inputs.version }}

